"""alter db

Revision ID: 3a3565b1ba02
Revises: e5585a6eff4
Create Date: 2014-03-16 18:45:23.584401

"""

# revision identifiers, used by Alembic.
revision = '3a3565b1ba02'
down_revision = 'e5585a6eff4'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table(u'_tbperson')
    op.drop_table(u'_tcontact')
    op.drop_table(u'_tlicence')
    op.drop_table(u'_tappointment_row')
    op.drop_table(u'_temporal')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('unique_idx_users_username', 'user')
    op.create_index('unique_idx_users_username', 'user', [u'username'], unique=True)
    op.drop_constraint('unique_idx_users_email', 'user')
    op.create_index('unique_idx_users_email', 'user', [u'email'], unique=True)
    op.drop_constraint(None, 'resource_type')
    op.create_index('resource_type_name_key', 'resource_type', [u'name'], unique=True)
    op.drop_constraint('unique_idx_resource_type_name', 'resource_type')
    op.create_index('unique_idx_resource_type_name', 'resource_type', [u'name'], unique=True)
    op.drop_constraint('unique_idx_resource_type_module', 'resource_type')
    op.create_index('unique_idx_resource_type_module', 'resource_type', [u'module', u'resource_name'], unique=True)
    op.drop_constraint('unique_idx_currency_iso_code', 'currency')
    op.create_index('unique_idx_currency_iso_code', 'currency', [u'iso_code'], unique=True)
    op.create_table(u'_temporal',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('_temporal_id_seq'::regclass)", nullable=False),
    sa.Column(u'createdt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column(u'modifydt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint(u'id', name=u'_temporal_pkey')
    )
    op.create_table(u'_tappointment_row',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('_tappointment_row_id_seq'::regclass)", nullable=False),
    sa.Column(u'employee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'position_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'main_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'temporal_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'deleted', sa.BOOLEAN(), server_default='false', autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['main_id'], [u'appointment_row.id'], name=u'fk_main_id_appointment_row_id'),
    sa.ForeignKeyConstraint(['temporal_id'], [u'_temporal.id'], name=u'fk_temporal_id_temporal_id'),
    sa.PrimaryKeyConstraint(u'id', name=u'_tappointment_row_pkey')
    )
    op.create_table(u'_tlicence',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('_tlicence_id_seq'::regclass)", nullable=False),
    sa.Column(u'temporal_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'licence_num', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column(u'date_from', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column(u'date_to', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column(u'deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column(u'main_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint(u'id', name=u'_tlicence_pkey')
    )
    op.create_table(u'_tcontact',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('_tcontact_id_seq'::regclass)", nullable=False),
    sa.Column(u'temporal_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'contact_type', postgresql.ENUM(u'phone', u'email', u'skype', name=u'contact_type_enum'), autoincrement=False, nullable=False),
    sa.Column(u'contact', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column(u'deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column(u'main_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['main_id'], [u'contact.id'], name=u'fk_main_id_contact_id'),
    sa.ForeignKeyConstraint(['temporal_id'], [u'_temporal.id'], name=u'fk_tcontact_id_temporal_id'),
    sa.PrimaryKeyConstraint(u'id', name=u'_tcontact_pkey')
    )
    op.create_table(u'_tbperson',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('_tbperson_id_seq'::regclass)", nullable=False),
    sa.Column(u'temporal_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'first_name', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column(u'last_name', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column(u'second_name', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column(u'position_name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column(u'main_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint(u'id', name=u'_tbperson_pkey')
    )
    ### end Alembic commands ###
